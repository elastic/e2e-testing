---
- name: Extend environment
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "SUITE={{ lookup('env', 'SUITE') or 'fleet' }}"
    - "STACK_VERSION={{ lookup('env', 'STACK_VERSION') or '8.0.0-SNAPSHOT' }}"
    - "BEAT_VERSION={{ lookup('env', 'BEAT_VERSION') or '8.0.0-SNAPSHOT' }}"
    - "ELASTIC_APM_GLOBAL_LABELS={{ lookup('env', 'ELASTIC_APM_GLOBAL_LABELS') }}"
    # - "ELASTIC_APM_SECRET_TOKEN={{ lookup('env', 'ELASTIC_APM_SECRET_TOKEN') }}"
    # - "ELASTIC_APM_SERVER_URL={{ lookup('env', 'ELASTIC_APM_SERVER_URL') }}"
    # - "OTEL_EXPORTER_OTLP_ENDPOINT={{ lookup('env', 'OTEL_EXPORTER_OTLP_ENDPOINT') }}"
    # - "OTEL_EXPORTER_OTLP_HEADERS={{ lookup('env', 'OTEL_EXPORTER_OTLP_HEADERS') }}"

- name: Create test script file
  become: no
  copy:
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    mode: '0777'
    dest: "/home/{{ansible_user}}/e2e-testing/.ci/scripts/functional-test.sh"
    content: |
       #!/usr/bin/env bash

       ## Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
       ## or more contributor license agreements. Licensed under the Elastic License;
       ## you may not use this file except in compliance with the Elastic License.

       set -euxo pipefail
       #
       # Run the functional tests using the functional-test make goal and parse the
       # output to JUnit format.
       #
       # Parameters:
       #   - SUITE - that's the suite to be tested. Default '' which means all of them.
       #   - TAGS - that's the tags to be tested. Default '' which means all of them.
       #   - STACK_VERSION - that's the version of the stack to be tested. Default is stored in '.stack-version'.
       #   - BEAT_VERSION - that's the version of the Beat to be tested. Default is stored in '.stack-version'.
       #

       BASE_DIR="/home/{{ansible_user}}/e2e-testing"
       source "${BASE_DIR}/.env"

       "${BASE_DIR}/.ci/scripts/install-test-dependencies.sh" "${SUITE}"

       REPORT="${BASE_DIR}/outputs/TEST-$(uname -m)-${SUITE}-{{runId}}-$(date \"+%Y-%m-%d-%H:%M:%S\")"

       TAGS="${1}" FORMAT=junit:${REPORT}.xml STACK_VERSION=${STACK_VERSION} BEAT_VERSION=${BEAT_VERSION} make --no-print-directory -C "${BASE_DIR}/e2e/_suites/${SUITE}" functional-test
