---
- name: Install dependencies (Debian/Ubuntu)
  become: True
  apt:
    name:
      - rsync
      - wget
      - build-essential
      - python3-pip
    state: latest
    update_cache: yes
  register: package_install_res
  retries: 5
  until: package_install_res is success
  when:
    - ansible_os_family not in ["Windows"]
    - ansible_pkg_mgr == 'apt'

- name: Install dependencies (SUSE)
  become: True
  zypper:
    name:
      - autoconf
      - bison
      - docker
      - flex
      - gcc
      - gcc-c++
      - kernel-default-devel
      - make
      - m4
      - python3-pip
      - rsync
      - wget
    state: present
  when:
    - ansible_facts['os_family'] != "Windows"
    - ansible_os_family == "Suse" or ansible_pkg_mgr == 'zypper'

- name: Install dependencies (CentOS)
  become: True
  ansible.builtin.package:
    name:
      - autoconf
      - bison
      - flex
      - gcc
      - gcc-c++
      - kernel-devel
      - make
      - m4
      - patch
      - python3-pip
      - rsync
      - wget
    state: latest
  when: ansible_distribution in ["Fedora", "RedHat", "CentOS"]

- name: Install dependencies (Oracle Linux)
  become: True
  ansible.builtin.package:
    name:
      - autoconf
      - bison
      - flex
      - gcc
      - gcc-c++
      - kernel-devel
      - make
      - m4
      - patch
      - python3-pip
      - rsync
      - wget
    state: latest
    update_cache: yes
  register: package_install_res
  retries: 5
  until: package_install_res is success
  when: ansible_distribution in ["OracleLinux"]

- name: Install ssh-import-id python package to copy public SSH keys from Github accounts
  become: True
  pip:
    name: ssh-import-id

- name: Set sshd configuration for client alive settings
  become: True
  ansible.builtin.copy:
    src: sshd_config
    dest: /etc/ssh/sshd_config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
  when: ansible_distribution in ["CentOS", "Debian", "Fedora", "RedHat", "Ubuntu"]

- name: Install Docker for ARM (Debian, Ubuntu)
  become: True
  ansible.builtin.shell: curl -fsSL test.docker.com -o get-docker.sh && sh get-docker.sh
  when:
    - ansible_distribution in ["Debian", "Ubuntu"]
    - '"arm64" in nodeLabel'
