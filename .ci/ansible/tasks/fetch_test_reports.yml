---
- name: Fetch Test logs
  become: false
  environment: 
    PATH: "/home/admin/bin:/home/admin/go/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/go/bin"
  ansible.builtin.shell: 
    cmd: |
      ([ -d ./kubernetes-autodiscover ] && tar -czf "kubernetes-autodiscover-logs.tgz" "./kubernetes-autodiscover") || true
      ([ -d ./docker-logs ] && tar -czf "docker-logs.tgz" "./docker-logs") || true
      ([ -d ./fleet ] tar -czf "fleet-logs.tgz" "./fleet") || true
    chdir: "{{ e2e_base_dir }}outputs"
  tags:
    - fetch-reports
  when:
    - ansible_facts['os_family'] != "Windows"

- name: Find the Test reports to copy/fetch
  become: false
  ansible.builtin.find:
    paths: "{{ e2e_base_dir }}outputs"
    file_type: file
    use_regex: yes
    recurse: yes
    patterns:
      - "^TEST.*json$"
      - "^TEST.*xml$"
      - "^.*tgz$"
      - "^.*zip$"
  register: files_2_fetch
  tags:
    - fetch-reports
  when:
    - ansible_facts['os_family'] != "Windows"

- name: Find the Test reports to copy/fetch (Windows)
  become: false
  ansible.windows.win_find:
    paths: "{{ e2e_base_dir }}outputs"
    file_type: file
    use_regex: yes
    recurse: yes
    patterns:
      - "^TEST.*json$"
      - "^TEST.*xml$"
      - "^.*tgz$"
      - "^.*zip$"
  register: files_2_fetch_win
  tags:
    - fetch-reports
  when:
    - ansible_facts['os_family'] == "Windows"

- name: Create local directory
  become: false
  vars:
    ansible_shell_type: "sh"
  ansible.builtin.file:
    path: "{{ workspace }}outputs/{{ inventory_hostname }}"
    state: directory
  delegate_to: localhost
  tags:
    - fetch-reports

- name: Set report folder name
  become: false
  vars:
    prefix: "{{ lookup('env', 'REPORT_PREFIX') | default('') | replace(' ', '_') }}"
    suite: "{{ lookup('env', 'SUITE') | default('') | replace(' ', '_') }}"
    arch: "{{ lookup('env', 'GOARCH') | default('') }}"
    tags: "{{ lookup('env', 'TAGS') | default('') | replace(' ', '_') | replace('@', '') | replace('~', '')}}"
  set_fact:
    report_folder: "{{ workspace }}outputs/{{ prefix }}{{ suite }}-{{ arch }}-{{ tags }}"
  tags:
    - fetch-reports

- name: Fetch the Test reports
  become: false
  ansible.builtin.fetch:
    src: "{{ item.path }}"
    dest: "{{ report_folder }}/"
    flat: yes
    fail_on_missing: no
  with_items: "{{ files_2_fetch.files }}"
  tags:
    - fetch-reports
  when:
    - ansible_facts['os_family'] != "Windows"

- name: Fetch the Test reports (Windows)
  become: false
  ansible.builtin.fetch:
    src: "{{ item.path }}"
    dest: "{{ report_folder }}/"
    flat: yes
    fail_on_missing: no
  with_items: "{{ files_2_fetch_win.files }}"
  tags:
    - fetch-reports
  when:
    - ansible_facts['os_family'] == "Windows"
