---
- name: Initialize env file
  ansible.windows.win_file:
    path: "{{ e2e_home_dir }}.env"
    state: absent

- name: Extend environment for Fleet testing (Windows)
  no_log: true
  community.windows.win_lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'fleet' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'remote' }}\""
    - "ELASTICSEARCH_PASSWORD=\"{{ lookup('env', 'ELASTICSEARCH_PASSWORD') or 'changeme' }}\""
    - "KIBANA_PASSWORD=\"{{ lookup('env', 'KIBANA_PASSWORD') or 'changeme' }}\""
    - "SKIP_PULL=\"{{ lookup('env', 'SKIP_PULL') or '1' }}\""
    - "DEVELOPER_MODE=\"{{ lookup('env', 'DEVELOPER_MODE') or 'false' }}\""
  when:
    - suite is defined
    - stackRunner is defined
    - suite == "fleet"
  tags:
    - scripts

- name: Extend environment for Remote provider (Windows)
  no_log: true
  community.windows.win_lineinfile::
    state: present
    line: "{{ item }}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "ELASTICSEARCH_URL=\"http://{{ stackRunner }}:9200\""
    - "KIBANA_URL=\"http://{{ stackRunner }}:5601\""
    - "FLEET_URL=\"http://{{ stackRunner }}:8220\""
  when:
    - suite is defined
    - stackRunner is defined
    - lookup('env', 'PROVIDER') == 'remote'
  tags:
    - scripts

- name: Extend environment for Remote provider (Windows)
  no_log: true
  community.windows.win_lineinfile::
    state: present
    line: "{{ item }}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "ELASTICSEARCH_URL=\"{{ lookup('env', 'ELASTICSEARCH_URL') }}\""
    - "KIBANA_URL=\"{{ lookup('env', 'KIBANA_URL')}}\""
    - "FLEET_URL=\"{{ lookup('env', 'FLEET_URL')}}\""
  when:
    - suite is defined
    - lookup('env', 'ELASTICSEARCH_URL') != ''
    - lookup('env', 'PROVIDER') == 'remote'
  tags:
    - scripts

- name: Extend environment for Fleet with elastic-package testing (Windows)
  no_log: true
  community.windows.win_lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'fleet' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'elastic-package' }}\""
  when: "'fleet_elastic_pkg' in nodeLabel"
  tags:
    - scripts

- name: Extend environment for Kubernetes Autodiscover testing (Windows)
  no_log: true
  community.windows.win_lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'kubernetes-autodiscover' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'docker' }}\""
    - "KIND_VERSION=\"{{ lookup('env', 'KIND_VERSION') }}\""
    - "KUBERNETES_VERSION=\"{{ lookup('env', 'KUBERNETES_VERSION') }}\""
  when:
    - suite is defined
    - suite == "kubernetes-autodiscover"
  tags:
    - scripts

- name: Extend environment (Windows)
  no_log: true
  community.windows.win_lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "TAGS=\"{{ lookup('env', 'TAGS') }}\""
    - "DEVELOPER_MODE=\"{{ lookup('env', 'DEVELOPER_MODE') or 'false' }}\""
    - "STACK_VERSION=\"{{ lookup('env', 'STACK_VERSION') or lookup('file', '{{ workspace }}.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "BEAT_VERSION=\"{{ lookup('env', 'BEAT_VERSION') or lookup('env', 'STACK_VERSION') or lookup('file', '{{ workspace }}.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "ELASTIC_AGENT_VERSION=\"{{ lookup('env', 'ELASTIC_AGENT_VERSION') or lookup('env', 'STACK_VERSION') or lookup('file', '{{ workspace }}.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "GITHUB_CHECK_SHA1=\"{{ lookup('env', 'GITHUB_CHECK_SHA1') or '' }}\""
    - "GITHUB_CHECK_REPO=\"{{ lookup('env', 'GITHUB_CHECK_REPO') or 'elastic-agent' }}\""
    - "ELASTIC_APM_GLOBAL_LABELS=\"{{ lookup('env', 'ELASTIC_APM_GLOBAL_LABELS') }}\""
    - "LOG_LEVEL=\"{{ lookup('env', 'LOG_LEVEL') or 'TRACE' }}\""
    - "OP_LOG_LEVEL=\"{{ lookup('env', 'LOG_LEVEL') or lookup('env', 'OP_LOG_LEVEL') or 'TRACE' }}\""
    - "TIMEOUT_FACTOR=7"
    - "REPORT_PREFIX=\"{{ lookup('env', 'REPORT_PREFIX') }}\""
  tags:
    - scripts

- name: Create Fleet test script file (Windows)
  ansible.windows.win_copy:
    owner: "{{ansible_user}}"
    dest: "{{ e2e_base_dir }}.ci/scripts/functional-test.ps1"
    content: |
       Set-PSDebug -Trace 1
       $SUITE = "{{ lookup('env', 'SUITE') or 'fleet' }}"
       $REPORT_PREFIX = "{{ lookup('env', 'REPORT_PREFIX') or 'junit' }}"

       $SEED = [Math]::Round((Get-Date).ToFileTime() / 10000000 - 11644473600)
       $REPORT="C:\Users\ogc\e2e-testing\outputs\TEST-${REPORT_PREFIX}-{{ runId }}-${SEED}"

       Write-Output "Removing previous test files in the case the workspace is reused"
       Remove-Item {{ e2e_base_dir }}outputs\TEST-*.*

       Add-Content C:\Users\ogc\.op\.env  "${REPORT}"

       $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")
       cd "{{ e2e_base_dir }}\e2e\_suites\${SUITE}"
       go test -timeout 90m -v --godog.format="pretty,cucumber:${REPORT}.json,junit:${REPORT}.xml" --godog.tags="{{ lookup('env', 'TAGS') }}"
  tags:
    - scripts
