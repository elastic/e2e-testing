---
- name: Extend environment for Stack Bootstrapping
  lineinfile:
    state: present
    line: "{{ item }}"
    insertafter: EOF
    dest: "/home/{{ ansible_user }}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE=\"fleet\""
    - "export TAGS=\"non-existing-tag\""
    - "export PROVIDER=\"docker\""
    - "export DEVELOPER_MODE=\"true\""
    - "export SKIP_PULL=\"1\""
    - "export LOG_LEVEL=\"TRACE\""
    - "export STACK_VERSION=\"{{ lookup('env', 'STACK_VERSION') or lookup('file', '{{workspace}}/.stack-version') }}\""
    - "export KIBANA_VERSION=\"{{ lookup('env', 'KIBANA_VERSION') or lookup('file', '{{ workspace }}/.stack-version') }}\""
    - "export ELASTIC_AGENT_VERSION=\"{{ lookup('env', 'ELASTIC_AGENT_VERSION') or lookup('file', '{{ workspace }}/.stack-version') }}\""
  when: "'stack' == nodeLabel"
  tags:
    - scripts

- name: Extend environment for Fleet testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE=\"{{ lookup('env', 'SUITE') or 'fleet' }}\""
    - "export PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'remote' }}\""
    - "export ELASTICSEARCH_PASSWORD=\"changeme\""
    - "export KIBANA_PASSWORD=\"changeme\""
    - "export SKIP_PULL=\"1\""
  when:
    - suite is defined
    - stackRunner is defined
    - suite == "fleet"
  tags:
    - scripts

- name: Extend environment for Remote provider
  lineinfile:
    state: present
    line: "{{ item }}"
    insertafter: EOF
    dest: "/home/{{ ansible_user }}/e2e-testing/.env"
    create: yes
  with_items:
    - "export ELASTICSEARCH_URL=\"http://{{ stackRunner }}:9200\""
    - "export KIBANA_URL=\"http://{{ stackRunner }}:5601\""
    - "export FLEET_URL=\"http://{{ stackRunner }}:8220\""
  when:
    - suite is defined
    - stackRunner is defined
    - lookup('env', 'PROVIDER') == 'remote'
  tags:
    - scripts

- name: Extend environment for Fleet with elastic-package testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE=\"{{ lookup('env', 'SUITE') or 'fleet' }}\""
    - "export PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'elastic-package' }}\""
  when: "'fleet_elastic_pkg' in nodeLabel"
  tags:
    - scripts

- name: Extend environment for Kubernetes Autodiscover testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE=\"{{ lookup('env', 'SUITE') or 'kubernetes-autodiscover' }}\""
    - "export PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'docker' }}\""
    - "export KIND_VERSION=\"{{ lookup('env', 'KIND_VERSION') }}\""
    - "export KUBERNETES_VERSION=\"{{ lookup('env', 'KUBERNETES_VERSION') }}\""
  when:
    - suite is defined
    - suite == "kubernetes-autodiscover"
  tags:
    - scripts

- name: Extend environment for Helm testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE=\"{{ lookup('env', 'SUITE') or 'helm' }}\""
    - "export PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'docker' }}\""
    - "export HELM_CHART_VERSION=\"{{ lookup('env', 'HELM_CHART_VERSION') }}\""
    - "export HELM_VERSION=\"{{ lookup('env', 'HELM_VERSION') }}\""
    - "export KIND_VERSION=\"{{ lookup('env', 'KIND_VERSION') }}\""
    - "export KUBERNETES_VERSION=\"{{ lookup('env', 'KUBERNETES_VERSION') }}\""
  when:
    - suite is defined
    - suite == "helm"
  tags:
    - scripts

- name: Extend environment
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export TAGS=\"{{ lookup('env', 'TAGS') }}\""
    - "export STACK_VERSION=\"{{ lookup('file', '{{workspace}}/.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "export BEAT_VERSION=\"{{ lookup('env', 'BEAT_VERSION') or lookup('file', '{{ workspace }}/.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "export ELASTIC_AGENT_VERSION=\"{{ lookup('env', 'ELASTIC_AGENT_VERSION') or lookup('file', '{{ workspace }}/.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "export GITHUB_CHECK_SHA1=\"{{ lookup('env', 'GITHUB_CHECK_SHA1') }}\""
    - "export GITHUB_CHECK_REPO=\"{{ lookup('env', 'GITHUB_CHECK_REPO') }}\""
    - "export ELASTIC_APM_GLOBAL_LABELS=\"{{ lookup('env', 'ELASTIC_APM_GLOBAL_LABELS') }}\""
    - "export LOG_LEVEL=\"TRACE\""
    - "export REPORT_PREFIX=\"{{ lookup('env', 'REPORT_PREFIX') }}\""
    - "export PATH=\"$PATH:/opt/go/{{golang_version}}/bin:/usr/local/bin\""
  tags:
    - scripts

- name: Create Fleet test script file
  become: no
  copy:
    owner: "{{ansible_user}}"
    mode: '0777'
    dest: "/home/{{ansible_user}}/e2e-testing/.ci/scripts/functional-test.sh"
    content: |
       #!/usr/bin/env bash
       set -euxo pipefail

       BASE_DIR="/home/{{ansible_user}}/e2e-testing"
       source "${BASE_DIR}/.env"

       "${BASE_DIR}/.ci/scripts/install-test-dependencies.sh" "${SUITE}"

       REPORT_PREFIX=$(echo "$REPORT_PREFIX" | sed -r 's/[ @~]+//g')
       SEED="$(date +%Y-%m-%d-%H:%M:%S)"
       REPORT="${BASE_DIR}/outputs/TEST-${REPORT_PREFIX}-{{runId}}-${SEED}"

       TAGS="${TAGS}" \
         LOG_LEVEL="TRACE" \
         FORMAT="pretty,cucumber:${REPORT}.json,junit:${REPORT}.xml" \
         STACK_VERSION="${STACK_VERSION}" \
         BEAT_VERSION="${BEAT_VERSION}" \
         ELASTIC_AGENT_VERSION="${ELASTIC_AGENT_VERSION}" \
         make --no-print-directory -C "${BASE_DIR}/e2e/_suites/${SUITE}" functional-test
  tags:
    - scripts
