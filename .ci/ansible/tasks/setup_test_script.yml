---
- name: Extend environment for Stack Bootstrapping
  lineinfile:
    state: present
    line: "{{ item }}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"fleet\""
    - "TAGS=\"non-existing-tag\""
    - "PROVIDER=\"docker\""
    - "DEVELOPER_MODE=\"true\""
    - "SKIP_PULL=\"1\""
    - "LOG_LEVEL=\"TRACE\""
    - "STACK_VERSION=\"{{ lookup('env', 'STACK_VERSION') or lookup('file', '{{workspace}}/.stack-version') }}\""
    - "KIBANA_VERSION=\"{{ lookup('env', 'KIBANA_VERSION') or lookup('file', '{{ workspace }}/.stack-version') }}\""
    - "ELASTIC_AGENT_VERSION=\"{{ lookup('env', 'ELASTIC_AGENT_VERSION') or lookup('file', '{{ workspace }}/.stack-version') }}\""
  when: "'stack' == nodeLabel"
  tags:
    - scripts

- name: Extend environment for Fleet testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'fleet' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'remote' }}\""
    - "ELASTICSEARCH_PASSWORD=\"changeme\""
    - "KIBANA_PASSWORD=\"changeme\""
    - "SKIP_PULL=\"1\""
  when:
    - suite is defined
    - stackRunner is defined
    - suite == "fleet"
  tags:
    - scripts

- name: Extend environment for Remote provider
  lineinfile:
    state: present
    line: "{{ item }}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "ELASTICSEARCH_URL=\"http://{{ stackRunner }}:9200\""
    - "KIBANA_URL=\"http://{{ stackRunner }}:5601\""
    - "FLEET_URL=\"http://{{ stackRunner }}:8220\""
  when:
    - suite is defined
    - stackRunner is defined
    - lookup('env', 'PROVIDER') == 'remote'
  tags:
    - scripts

- name: Extend environment for Fleet with elastic-package testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'fleet' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'elastic-package' }}\""
  when: "'fleet_elastic_pkg' in nodeLabel"
  tags:
    - scripts

- name: Extend environment for Kubernetes Autodiscover testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'kubernetes-autodiscover' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'docker' }}\""
    - "KIND_VERSION=\"{{ lookup('env', 'KIND_VERSION') }}\""
    - "KUBERNETES_VERSION=\"{{ lookup('env', 'KUBERNETES_VERSION') }}\""
  when:
    - suite is defined
    - suite == "kubernetes-autodiscover"
  tags:
    - scripts

- name: Extend environment for Helm testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "SUITE=\"{{ lookup('env', 'SUITE') or 'helm' }}\""
    - "PROVIDER=\"{{ lookup('env', 'PROVIDER') or 'docker' }}\""
    - "HELM_CHART_VERSION=\"{{ lookup('env', 'HELM_CHART_VERSION') }}\""
    - "HELM_VERSION=\"{{ lookup('env', 'HELM_VERSION') }}\""
    - "KIND_VERSION=\"{{ lookup('env', 'KIND_VERSION') }}\""
    - "KUBERNETES_VERSION=\"{{ lookup('env', 'KUBERNETES_VERSION') }}\""
  when:
    - suite is defined
    - suite == "helm"
  tags:
    - scripts

- name: Extend environment
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "{{ e2e_home_dir }}.env"
    create: yes
  with_items:
    - "TAGS=\"{{ lookup('env', 'TAGS') }}\""
    - "STACK_VERSION=\"{{ lookup('file', '{{workspace}}/.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "BEAT_VERSION=\"{{ lookup('env', 'BEAT_VERSION') or lookup('file', '{{ workspace }}/.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "ELASTIC_AGENT_VERSION=\"{{ lookup('env', 'ELASTIC_AGENT_VERSION') or lookup('file', '{{ workspace }}/.stack-version') or '8.0.0-SNAPSHOT' }}\""
    - "GITHUB_CHECK_SHA1=\"{{ lookup('env', 'GITHUB_CHECK_SHA1') }}\""
    - "GITHUB_CHECK_REPO=\"{{ lookup('env', 'GITHUB_CHECK_REPO') }}\""
    - "ELASTIC_APM_GLOBAL_LABELS=\"{{ lookup('env', 'ELASTIC_APM_GLOBAL_LABELS') }}\""
    - "LOG_LEVEL=\"TRACE\""
    - "OP_LOG_LEVEL=\"TRACE\""
    - "TIMEOUT_FACTOR=7"
    - "REPORT_PREFIX=\"{{ lookup('env', 'REPORT_PREFIX') }}\""
  tags:
    - scripts

- name: Copy env file to root
  become: True
  ansible.builtin.copy:
    remote_src: True
    src: "{{ e2e_home_dir }}.env"
    dest: "/root/.op/.env"
    owner: root
    group: root
  tags:
    - scripts

- name: Create Fleet test script file
  copy:
    owner: "{{ansible_user}}"
    mode: '0777'
    dest: "{{ e2e_base_dir }}.ci/scripts/functional-test.sh"
    content: |
       #!/usr/bin/env bash
       set -euxo pipefail

       SUITE="{{ lookup('env', 'SUITE') or 'fleet' }}"
       REPORT_PREFIX="{{ lookup('env', 'REPORT_PREFIX') or 'junit' }}"

       "{{ e2e_base_dir }}.ci/scripts/install-test-dependencies.sh" "${SUITE}"

       SEED="$(date +%Y-%m-%d-%H:%M:%S)"
       echo "REPORT='{{ e2e_base_dir }}outputs/TEST-${REPORT_PREFIX}-{{runId}}-${SEED}'" >> {{ e2e_home_dir }}.env

       export PATH="$PATH:/usr/local/go/bin"

       TAGS="{{ lookup('env', 'TAGS') }}" \
         FORMAT="pretty,cucumber:${REPORT}.json,junit:${REPORT}.xml" \
         make --no-print-directory -C "{{ e2e_base_dir }}e2e/_suites/${SUITE}" functional-test
  tags:
    - scripts
