- name: Create test environment
  hosts: localhost
  gather_facts: no
  vars:
      ansible_user: "{{ nodeUser }}"
  tasks:
  - name: Setup nodes
    include_tasks: tasks/runners.yml
    tags:
      - provision-stack
      - start-node

- name: Teardown environment
  hosts: localhost
  gather_facts: no
  vars:
      ansible_user: "{{ nodeUser }}"
  tasks:
  - name: Teardown Test Runners (AWS)
    include_tasks: tasks/teardown.yml
    tags:
      - destroy

- name: Manage stack instance
  hosts: all
  connection: ssh
  become: True
  tags:
    - setup-stack
  roles:
    - role: geerlingguy.docker
      docker_daemon_options:
        default-ulimit: ["nofile=1024000:1024000"]
    - role: andrewrothstein.kubectl
    - role: andrewrothstein.kind
    - role: gantsign.golang
      vars:
        golang_version: 1.16.3
  vars:
    ansible_user: "{{nodeUser}}"
    ansible_python_interpreter: "auto"
  tasks:
  - name: Install deps
    include_tasks: tasks/install_deps.yml
    tags:
      - setup-node
  - name: Create environment file
    become: no
    local_action:
      module: copy
      dest: "{{workspace}}/.env"
      content: |
        export OP_LOG_LEVEL=TRACE
        export LOG_LEVEL=TRACE
        export TIMEOUT_FACTOR=7
    tags:
      - setup-stack

  - name: Setup source code
    include_tasks: tasks/copy_test_files.yml
    tags:
      - setup-stack

  - name: Configure test script
    include_tasks: tasks/setup_test_script.yml
    tags:
      - setup-stack

  - name: Add SSH keys to stack
    include_tasks: tasks/install_ssh_keys.yml
    tags:
      - setup-stack

  - name: Add SSH keys to stack
    include_tasks: tasks/install_ssh_keys.yml
    tags:
      - setup-stack

  - name: Configure stack files
    ansible.builtin.replace:
      path: '{{ item.path }}'
      regexp: '{{ item.old }}'
      replace: '{{ item.new }}'
    loop:
      - { old: 'http://elasticsearch', new: 'http://{{ inventory_hostname }}', path: "/home/{{ ansible_user }}/e2e-testing/cli/config/compose/profiles/fleet/default/kibana.config.yml" }
      - { old: 'http://fleet-server', new: 'http://{{ inventory_hostname }}', path: "/home/{{ ansible_user }}/e2e-testing/cli/config/compose/profiles/fleet/default/kibana.config.yml" }
      - { old: 'http://kibana', new: 'http://{{ inventory_hostname }}', path: "/home/{{ ansible_user }}/e2e-testing/cli/config/compose/services/elastic-agent/fleet-server/docker-compose.yml" }
      - { old: 'http://package-registry:8080', new: 'https://epr-staging.elastic.co', path: "/home/{{ ansible_user }}/e2e-testing/cli/config/compose/profiles/fleet/default/kibana.config.yml" }
    tags:
      - setup-stack

  - name: Start stack without any tag to spin up the stack using Fleet's bootstrapping code
    become: true
    shell: "/home/{{ ansible_user }}/e2e-testing/.ci/scripts/functional-test.sh 'non-existing-tag'"
    tags:
      - setup-stack

- name: Manage runner instances
  hosts: all
  connection: ssh
  become: True
  tags:
    - setup-node
  roles:
    - role: geerlingguy.docker
      docker_daemon_options:
        default-ulimit: ["nofile=1024000:1024000"]
      when:
        - '"arm64" not in nodeLabel'
        - 'ansible_os_family not in ["Suse"]'
    - role: andrewrothstein.kubectl
      when: suite in ["kubernetes-autodiscover", "helm"]
    - role: andrewrothstein.kind
      when: suite in ["kubernetes-autodiscover", "helm"]
    - role: geerlingguy.helm
      when: suite in ["kubernetes-autodiscover", "helm"]
    - role: gantsign.golang
      vars:
        golang_version: 1.16.3
  vars:
    ansible_python_interpreter: "auto"
    ansible_user: "{{nodeUser}}"
    pip_package: "python3-pip"
  tasks:
  - name: Install deps
    include_tasks: tasks/install_deps.yml
    tags:
      - setup-node

  - name: Setup source code
    include_tasks: tasks/copy_test_files.yml
    tags:
      - setup-node
      - copy-source

  - name: Add SSH keys to runner instances
    include_tasks: tasks/install_ssh_keys.yml
    tags:
      - setup-node

  - name: Configure test script
    include_tasks: tasks/setup_test_script.yml
    tags:
      - setup-node
      - copy-source
