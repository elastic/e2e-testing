- name: Create test environment
  hosts: localhost
  gather_facts: yes
  vars:
    ansible_user: "{{ nodeUser }}"
  tasks:
  - name: Setup nodes
    include_tasks: tasks/runners.yml
    tags:
      - provision-stack
      - provision-node

- name: Manage stack instance
  hosts: all
  connection: ssh
  vars_files:
    - vars/main.yml
  tags:
    - setup-stack
  pre_tasks:
    - name: Load a variable file based on the OS type
      include_vars: "group_vars/Linux.yml"
    - name: Update apt cache.
      become: True
      apt: update_cache=yes cache_valid_time=600
      when: ansible_pkg_mgr == 'apt'
  roles:
    - role: geerlingguy.docker
      become: True
      docker_daemon_options:
        default-ulimit: ["nofile=1024000:1024000"]
      docker_users:
        - "{{ ansible_user }}"
    - role: geerlingguy.pip
      become: True
    - role: andrewrothstein.kubectl
    - role: andrewrothstein.kind
    - role: mdelapenya.go
      become: True
      vars:
        go_version: 1.17
  vars:
    ansible_user: "{{ nodeUser }}"
    ansible_python_interpreter: "auto"
  tasks:
  - name: Install deps
    include_tasks: tasks/install_deps.yml
    tags:
      - setup-node

  - name: Create home dir
    ansible.builtin.file:
      path: "{{ e2e_home_dir }}"
      state: directory
      mode: '0755'
      owner: "{{ ansible_user }}"
    tags:
      - setup-stack

  - name: Create home dir for root
    become: True
    ansible.builtin.file:
      path: "/root/.op"
      state: directory
      mode: '0755'
      owner: "root"
    tags:
      - setup-stack

  - name: Setup source code
    include_tasks: tasks/copy_test_files.yml
    tags:
      - setup-stack

  - name: Configure test script
    include_tasks: tasks/setup_test_script.yml
    tags:
      - setup-stack

  - name: Add SSH keys to stack
    include_tasks: tasks/install_ssh_keys.yml
    tags:
      - setup-stack

- name: Manage runner instances
  hosts: all
  connection: ssh
  gather_facts: True
  vars_files:
    - vars/main.yml
  tags:
    - setup-node
  pre_tasks:
    - name: Load a variable file based on the OS type
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files:
            - '{{ ansible_distribution }}.yml'
            - '{{ ansible_os_family }}.yml'
            - '{{ ansible_system }}.yml'
          paths:
            - 'group_vars'
    - name: Update apt cache.
      apt: update_cache=yes cache_valid_time=600
      become: True
      when: 
        - ansible_facts['os_family'] != "Windows"
        - ansible_pkg_mgr == 'apt'
    - name: Install deps
      include_tasks: tasks/install_deps.yml
      tags:
        - setup-node
  roles:
    - role: geerlingguy.docker
      become: True
      docker_daemon_options:
        default-ulimit: ["nofile=1024000:1024000"]
      docker_users:
        - "{{ ansible_user }}"
      when:
        - '"arm64" not in nodeLabel'
        - 'ansible_os_family not in ["Suse", "Windows"]'
    - role: geerlingguy.docker_arm
      become: True
      docker_daemon_options:
        default-ulimit: ["nofile=1024000:1024000"]
      docker_users:
        - "{{ ansible_user }}"
      when:
        - '"arm64" in nodeLabel'
    - role: geerlingguy.helm
      when:
        - ansible_facts['os_family'] != "Windows"
        - suite is defined
        - suite in ["kubernetes-autodiscover", "helm"]
    - role: mdelapenya.go
      become: True
      when: ansible_facts['os_family'] != "Windows"
      vars:
        go_version: 1.17
    - role: mdelapenya.go
      when: ansible_facts['os_family'] == "Windows"
      become: True
      become_user: "{{ ansible_user }}"
      become_method: "runas"
      vars:
        go_version: 1.17
  vars:
    ansible_python_interpreter: "auto"
    ansible_shell_type: "{{ nodeShellType | default('sh') }}"
    ansible_user: "{{ nodeUser }}"
    pip_package: "python3-pip"
  tasks:

  - name: Install Kubernetes using Role
    include_role:
      name: "{{ item }}"
    with_items:
      - andrewrothstein.kubectl
      - andrewrothstein.kind
    when:
      - ansible_facts['os_family'] != "Windows"
      - suite is defined
      - suite in ["kubernetes-autodiscover", "helm"]

  - name: Setup source code
    include_tasks: tasks/copy_test_files.yml
    tags:
      - setup-node
      - copy-source

  - name: Add SSH keys to runner instances
    include_tasks: tasks/install_ssh_keys.yml
    tags:
      - setup-node

  - name: Create home dir
    ansible.builtin.file:
      path: "{{ e2e_home_dir }}"
      state: directory
      mode: '0755'
      owner: "{{ ansible_user }}"
    tags:
      - setup-node
      - copy-source
      - scripts
    when: ansible_os_family not in ["Windows"]

  - name: Create home dir for root
    become: True
    ansible.builtin.file:
      path: "/root/.op"
      state: directory
      mode: '0755'
      owner: "root"
    tags:
      - setup-node
      - copy-source
      - scripts
    when: ansible_os_family not in ["Windows"]

  - name: Create home dir on Windows
    ansible.windows.win_file:
      path: "{{ e2e_home_dir }}"
      state: directory
    tags:
      - setup-node
      - copy-source
      - scripts
    when: ansible_os_family in ["Windows"]

  - name: Configure test script
    include_tasks: tasks/setup_test_script.yml
    tags:
      - setup-node
      - copy-source
      - scripts
    when:
      - ansible_facts['os_family'] != "Windows"

  - name: Configure test script (Windows)
    include_tasks: tasks/setup_test_script_windows.yml
    tags:
      - setup-node
      - copy-source
      - scripts
    when:
      - ansible_facts['os_family'] == "Windows"
