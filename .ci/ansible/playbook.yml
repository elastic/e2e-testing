- name: Create test environment
  hosts: localhost
  gather_facts: no
  tags:
    - deploy
  vars:
      gcp_project: elastic-observability
      gcp_cred_kind: serviceaccount
      gcp_cred_file: "{{ lookup('env', 'GOOGLE_APPLICATION_CREDENTIALS') or 'creds.json' }}"
      zone: "us-central1-c"
      region: "us-central1"
      ansible_user: ci
      vms:
        - e2e-vm-1
        - e2e-vm-2
        - e2e-vm-3
        - e2e-vm-4
        - e2e-vm-5
        - e2e-vm-6
        - e2e-vm-7
        - e2e-vm-8
        - e2e-vm-9
        - e2e-vm-10
        - e2e-vm-11

  tasks:
  - name: Setup Stack Instance
    include_role:
      name: provision
      tasks_from: stack.yml

  - name: Setup Test Runners (GCE)
    loop: "{{ vms }}"
    include_role:
      name: provision
      tasks_from: runners.yml

  - name: Setup Test Runners (AWS)
    include_role:
      name: provision
      tasks_from: runners-aws.yml

- name: Teardown environment
  hosts: localhost
  gather_facts: no
  tags:
    - destroy
  vars:
      gcp_project: elastic-observability
      gcp_cred_kind: serviceaccount
      gcp_cred_file: "{{ lookup('env', 'GOOGLE_APPLICATION_CREDENTIALS') or 'creds.json' }}"
      zone: "us-central1-c"
      region: "us-central1"
      ansible_user: ci
      vms:
        - e2e-vm-1
        - e2e-vm-2
        - e2e-vm-3
        - e2e-vm-4
        - e2e-vm-5
        - e2e-vm-6
        - e2e-vm-7
        - e2e-vm-8
        - e2e-vm-9
        - e2e-vm-10
        - e2e-vm-11
  tasks:
  - name: Teardown Stack Instance
    include_role:
      name: provision
      tasks_from: teardown-stack.yml

  - name: Teardown Test Runners (GCE)
    loop: "{{ vms }}"
    include_role:
      name: provision
      tasks_from: teardown-runners.yml

  - name: Teardown Test Runners (AWS)
    include_role:
      name: provision
      tasks_from: teardown-runners-aws.yml

- name: Manage stack instance
  hosts: stack_instances
  connection: ssh
  become: True
  tags:
    - deploy
  vars:
    ansible_user: ci
  tasks:
  - name: Setup sudo
    include_role:
      name: common
      tasks_from: setup_sudo.yml

  - name: Setup docker
    shell: |
      sudo yum -y remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine || true
      sudo yum -y install yum-utils
      sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      sudo yum -y install docker-ce docker-ce-cli containerd.io rsync wget gcc make curl
      sudo systemctl start docker
      sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose
      sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
      mkdir -p /home/ci/e2e-testing

  - name: Setup source code
    include_role:
      name: common
      tasks_from: copy_test_files.yml

  - name: Start stack
    shell: |
     sed -i '' -e 's,http://elasticsearch,http://{{inventory_hostname}},g' /home/{{ansible_user}}/e2e-testing/cli/config/compose/profiles/fleet/default/kibana.config.yml
     sed -i '' -e 's,http://fleet-server,http://{{inventory_hostname}},g' /home/{{ansible_user}}/e2e-testing/cli/config/compose/profiles/fleet/default/kibana.config.yml
     sudo docker-compose -f /home/ci/e2e-testing/cli/config/compose/profiles/fleet/docker-compose.yml up -d

- name: Manage (GCE) runner instances
  hosts: runner_instances
  connection: ssh
  become: True
  tags:
    - deploy
  vars:
    ansible_user: ci
    go_version: 1.16.3
  tasks:
  - name: Setup sudo
    include_role:
      name: common
      tasks_from: setup_sudo.yml

  - name: Install tools
    include_role:
      name: common
      tasks_from: install_tools.yml

  - name: Setup source code
    include_role:
      name: common
      tasks_from: copy_test_files.yml

  - name: Setup test script
    include_role:
      name: common
      tasks_from: setup_test_script.yml

- name: Manage (AWS) runner instances
  hosts: aws_runner_instances
  connection: ssh
  become: True
  tags:
    - deploy
  vars:
    ansible_user: ubuntu
    go_version: 1.16.3
  tasks:
  - name: Setup sudo
    include_role:
      name: common
      tasks_from: setup_sudo.yml
  - name: Install tools
    include_role:
      name: common
      tasks_from: install_tools.yml

  - name: Setup source code
    vars:
      ansible_user: ubuntu
    include_role:
      name: common
      tasks_from: copy_test_files.yml

  - name: Setup test script
    include_role:
      name: common
      tasks_from: setup_test_script.yml
